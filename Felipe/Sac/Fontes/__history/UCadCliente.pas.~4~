unit UCadCliente;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, UDM, StdCtrls, Buttons, Grids, DBGrids, Mask, DBCtrls, DB, ExtCtrls;
/// adicionar alt + f11  adiciona udm

type
  TFCad_Cliente = class(TForm)
    aaa: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Panel2: TPanel;
    DSCliente: TDataSource;
    edCodigo: TDBEdit;
    edNome: TDBEdit;
    edemail: TDBEdit;
    dgvCliente: TDBGrid;
    btnNovo: TBitBtn;
    btnGravar: TBitBtn;
    btnCancel: TBitBtn;
    btnAlterar: TBitBtn;
    btnExcluir: TBitBtn;
    btnSair: TBitBtn;
    edFone: TMaskEdit;
    procedure btnSairClick(Sender: TObject);
    procedure DSClienteStateChange(Sender: TObject);
    procedure dgvClienteCellClick(Column: TColumn);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FCad_Cliente: TFCad_Cliente;

implementation

{$R *.dfm}

procedure TFCad_Cliente.btnSairClick(Sender: TObject);
begin

  dm.TBCliente.Cancel;
  close;

end;

procedure TFCad_Cliente.dgvClienteCellClick(Column: TColumn);
begin
  with (dm.TBCliente) do
  begin

    edNome.Text := FieldByName('Nome').AsString;
    edFone.Text := FieldByName('Fone').AsString;
    edemail.Text := FieldByName('Email').AsString;

  end;
end;

procedure TFCad_Cliente.DSClienteStateChange(Sender: TObject);
begin
  with dm do
  begin

    btnNovo.Enabled := DSCliente.State in [dsBrowse];
    btnGravar.Enabled := DSCliente.State in [dsInsert, dsEdit];
    btnCancel.Enabled := DSCliente.State in [dsInsert, dsEdit];
    btnAlterar.Enabled := DSCliente.State in [dsBrowse]
      in [TBCliente.RecordCount > 0];
    btnExcluir.Enabled := DSCliente.State in [dsBrowse]
      in [TBCliente.RecordCount > 0];

  end;
end;

end.
